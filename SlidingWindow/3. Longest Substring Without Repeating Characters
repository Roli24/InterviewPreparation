/*
https://leetcode.com/problems/longest-substring-without-repeating-characters/description/

Given a string s, find the length of the longest 
substring
 without repeating characters.


Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.

Constraints:

1 <= nums.length <= 105
nums[i] is either 0 or 1.
0 <= k <= nums.length
*/

// using slidingWindow technique
class Solution {
    public int lengthOfLongestSubstring(String s) {
    Set<Character> set = new HashSet<Character>();
    int max = 0, j = 0;
    for(int i=0; i<s.length(); i++)
    {
        while(j < s.length() && !set.contains(s.charAt(j)))
        {
            set.add(s.charAt(j));
            max = Math.max(max, j-i+1);
            j++;
        }
        set.remove(s.charAt(i));
    }
    return max;
  }  
}
